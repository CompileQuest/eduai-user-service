events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    sendfile on;

    # Define upstream services
    upstream course_service {
        server host.docker.internal:9100; # Connect to localhost:5000
    }

    upstream auth_service {
        server host.docker.internal:9101; # Connect to localhost:5001
    }

    upstream user_service {
        server host.docker.internal:9102; # Connect to localhost:5002
    }

    server {
        listen 8080; # Listen on port 8080 for HTTP requests

        # Route /api/v1/course to course_service
        location /api/v1/course {
            proxy_pass http://course_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /api/v1/auth to auth_service
        location /api/v1/auth {
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /api/v1/user to user_service
        location /api/v1/user {
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}